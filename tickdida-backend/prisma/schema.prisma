generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// 用户模型
model User {
  id        String    @id @default(cuid())
  username  String    @unique
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  orders    Order[]
  payments  Payment[]
  stripeCustomerId String?
}

// 订单模型
model Order {
  id           String    @id @default(cuid())
  orderNo      String    @unique
  userId       String
  amount       Decimal   @precision(10, 2)
  status       String    @default("pending")
  productName  String
  description  String?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  user         User      @relation(fields: [userId], references: [id])
  payment      Payment?
}

// 支付记录模型
model Payment {
  id              String    @id @default(cuid())
  orderId         String
  paymentMethod   String    // alipay, stripe
  paymentId       String    // 支付平台的交易ID
  amount          Decimal   @precision(10, 2)
  status          String    @default("pending")
  currency        String    @default("CNY")
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  order           Order     @relation(fields: [orderId], references: [id])
  user            User?     @relation(fields: [userId], references: [id])
  userId          String?
}

// 订阅模型
model Subscription {
  id             String    @id @default(cuid())
  userId         String
  planId         String
  stripeSubId    String?
  status         String    @default("active")
  currentPeriodEnd DateTime
  nextBillingDate DateTime?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  user           User      @relation(fields: [userId], references: [id])
}

// 退款记录模型
model Refund {
  id            String    @id @default(cuid())
  paymentId     String
  refundAmount  Decimal   @precision(10, 2)
  reason        String
  status        String    @default("processing")
  refundNo      String    @unique
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  payment       Payment   @relation(fields: [paymentId], references: [id])
}